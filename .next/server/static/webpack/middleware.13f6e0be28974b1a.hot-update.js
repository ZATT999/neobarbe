"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("middleware",{

/***/ "(middleware)/./lib/supabase/middleware.ts":
/*!************************************!*\
  !*** ./lib/supabase/middleware.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   updateSession: () => (/* binding */ updateSession)\n/* harmony export */ });\n/* harmony import */ var _supabase_ssr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/ssr */ \"(middleware)/./node_modules/@supabase/ssr/dist/module/index.js\");\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/server */ \"(middleware)/./node_modules/next/dist/esm/api/server.js\");\n\n\nasync function updateSession(request) {\n    const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;\n    const supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;\n    if (!supabaseUrl || !supabaseAnonKey) {\n        console.error(\"[Middleware] Supabase credentials missing\");\n        return next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.next({\n            request\n        });\n    }\n    let supabaseResponse = next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.next({\n        request\n    });\n    const supabase = (0,_supabase_ssr__WEBPACK_IMPORTED_MODULE_0__.createServerClient)(supabaseUrl, supabaseAnonKey, {\n        cookies: {\n            getAll () {\n                return request.cookies.getAll();\n            },\n            setAll (cookiesToSet) {\n                cookiesToSet.forEach(({ name, value })=>request.cookies.set(name, value));\n                supabaseResponse = next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.next({\n                    request\n                });\n                cookiesToSet.forEach(({ name, value, options })=>supabaseResponse.cookies.set(name, value, options));\n            }\n        }\n    });\n    // Do not run code between createServerClient and\n    // supabase.auth.getUser(). A simple mistake could make it very hard to debug\n    // issues with users being randomly logged out.\n    // IMPORTANT: If you remove getUser() and you use server-side rendering\n    // with the Supabase client, your users may be randomly logged out.\n    const { data: { user } } = await supabase.auth.getUser();\n    // IMPORTANT: You *must* return the supabaseResponse object as it is.\n    // If you're creating a new response object with NextResponse.next() make sure to:\n    // 1. Pass the request in it, like so:\n    //    const myNewResponse = NextResponse.next({ request })\n    // 2. Copy over the cookies, like so:\n    //    myNewResponse.cookies.setAll(supabaseResponse.cookies.getAll())\n    // 3. Change the myNewResponse object to fit your needs, but avoid changing\n    //    the cookies!\n    // 4. Finally:\n    //    return myNewResponse\n    // If this is not done, you may be causing the browser and server to go out\n    // of sync and terminate the user's session prematurely!\n    return supabaseResponse;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbGliL3N1cGFiYXNlL21pZGRsZXdhcmUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWtEO0FBQ1U7QUFFckQsZUFBZUUsY0FBY0MsT0FBb0I7SUFDdEQsTUFBTUMsY0FBY0MsUUFBUUMsR0FBRyxDQUFDQyx3QkFBd0I7SUFDeEQsTUFBTUMsa0JBQWtCSCxRQUFRQyxHQUFHLENBQUNHLDZCQUE2QjtJQUVqRSxJQUFJLENBQUNMLGVBQWUsQ0FBQ0ksaUJBQWlCO1FBQ3BDRSxRQUFRQyxLQUFLLENBQUM7UUFDZCxPQUFPVixxREFBWUEsQ0FBQ1csSUFBSSxDQUFDO1lBQ3ZCVDtRQUNGO0lBQ0Y7SUFFQSxJQUFJVSxtQkFBbUJaLHFEQUFZQSxDQUFDVyxJQUFJLENBQUM7UUFDdkNUO0lBQ0Y7SUFFQSxNQUFNVyxXQUFXZCxpRUFBa0JBLENBQUNJLGFBQWFJLGlCQUFpQjtRQUNoRU8sU0FBUztZQUNQQztnQkFDRSxPQUFPYixRQUFRWSxPQUFPLENBQUNDLE1BQU07WUFDL0I7WUFDQUMsUUFBT0MsWUFBWTtnQkFDakJBLGFBQWFDLE9BQU8sQ0FBQyxDQUFDLEVBQUVDLElBQUksRUFBRUMsS0FBSyxFQUFFLEdBQUtsQixRQUFRWSxPQUFPLENBQUNPLEdBQUcsQ0FBQ0YsTUFBTUM7Z0JBQ3BFUixtQkFBbUJaLHFEQUFZQSxDQUFDVyxJQUFJLENBQUM7b0JBQ25DVDtnQkFDRjtnQkFDQWUsYUFBYUMsT0FBTyxDQUFDLENBQUMsRUFBRUMsSUFBSSxFQUFFQyxLQUFLLEVBQUVFLE9BQU8sRUFBRSxHQUFLVixpQkFBaUJFLE9BQU8sQ0FBQ08sR0FBRyxDQUFDRixNQUFNQyxPQUFPRTtZQUMvRjtRQUNGO0lBQ0Y7SUFFQSxpREFBaUQ7SUFDakQsNkVBQTZFO0lBQzdFLCtDQUErQztJQUUvQyx1RUFBdUU7SUFDdkUsbUVBQW1FO0lBQ25FLE1BQU0sRUFDSkMsTUFBTSxFQUFFQyxJQUFJLEVBQUUsRUFDZixHQUFHLE1BQU1YLFNBQVNZLElBQUksQ0FBQ0MsT0FBTztJQUUvQixxRUFBcUU7SUFDckUsa0ZBQWtGO0lBQ2xGLHNDQUFzQztJQUN0QywwREFBMEQ7SUFDMUQscUNBQXFDO0lBQ3JDLHFFQUFxRTtJQUNyRSwyRUFBMkU7SUFDM0Usa0JBQWtCO0lBQ2xCLGNBQWM7SUFDZCwwQkFBMEI7SUFDMUIsMkVBQTJFO0lBQzNFLHdEQUF3RDtJQUV4RCxPQUFPZDtBQUNUIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2xpYi9zdXBhYmFzZS9taWRkbGV3YXJlLnRzP2Q5MGQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlU2VydmVyQ2xpZW50IH0gZnJvbSBcIkBzdXBhYmFzZS9zc3JcIlxuaW1wb3J0IHsgTmV4dFJlc3BvbnNlLCB0eXBlIE5leHRSZXF1ZXN0IH0gZnJvbSBcIm5leHQvc2VydmVyXCJcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHVwZGF0ZVNlc3Npb24ocmVxdWVzdDogTmV4dFJlcXVlc3QpIHtcbiAgY29uc3Qgc3VwYWJhc2VVcmwgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkxcbiAgY29uc3Qgc3VwYWJhc2VBbm9uS2V5ID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfQU5PTl9LRVlcblxuICBpZiAoIXN1cGFiYXNlVXJsIHx8ICFzdXBhYmFzZUFub25LZXkpIHtcbiAgICBjb25zb2xlLmVycm9yKFwiW01pZGRsZXdhcmVdIFN1cGFiYXNlIGNyZWRlbnRpYWxzIG1pc3NpbmdcIilcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLm5leHQoe1xuICAgICAgcmVxdWVzdCxcbiAgICB9KVxuICB9XG5cbiAgbGV0IHN1cGFiYXNlUmVzcG9uc2UgPSBOZXh0UmVzcG9uc2UubmV4dCh7XG4gICAgcmVxdWVzdCxcbiAgfSlcblxuICBjb25zdCBzdXBhYmFzZSA9IGNyZWF0ZVNlcnZlckNsaWVudChzdXBhYmFzZVVybCwgc3VwYWJhc2VBbm9uS2V5LCB7XG4gICAgY29va2llczoge1xuICAgICAgZ2V0QWxsKCkge1xuICAgICAgICByZXR1cm4gcmVxdWVzdC5jb29raWVzLmdldEFsbCgpXG4gICAgICB9LFxuICAgICAgc2V0QWxsKGNvb2tpZXNUb1NldCkge1xuICAgICAgICBjb29raWVzVG9TZXQuZm9yRWFjaCgoeyBuYW1lLCB2YWx1ZSB9KSA9PiByZXF1ZXN0LmNvb2tpZXMuc2V0KG5hbWUsIHZhbHVlKSlcbiAgICAgICAgc3VwYWJhc2VSZXNwb25zZSA9IE5leHRSZXNwb25zZS5uZXh0KHtcbiAgICAgICAgICByZXF1ZXN0LFxuICAgICAgICB9KVxuICAgICAgICBjb29raWVzVG9TZXQuZm9yRWFjaCgoeyBuYW1lLCB2YWx1ZSwgb3B0aW9ucyB9KSA9PiBzdXBhYmFzZVJlc3BvbnNlLmNvb2tpZXMuc2V0KG5hbWUsIHZhbHVlLCBvcHRpb25zKSlcbiAgICAgIH0sXG4gICAgfSxcbiAgfSlcblxuICAvLyBEbyBub3QgcnVuIGNvZGUgYmV0d2VlbiBjcmVhdGVTZXJ2ZXJDbGllbnQgYW5kXG4gIC8vIHN1cGFiYXNlLmF1dGguZ2V0VXNlcigpLiBBIHNpbXBsZSBtaXN0YWtlIGNvdWxkIG1ha2UgaXQgdmVyeSBoYXJkIHRvIGRlYnVnXG4gIC8vIGlzc3VlcyB3aXRoIHVzZXJzIGJlaW5nIHJhbmRvbWx5IGxvZ2dlZCBvdXQuXG5cbiAgLy8gSU1QT1JUQU5UOiBJZiB5b3UgcmVtb3ZlIGdldFVzZXIoKSBhbmQgeW91IHVzZSBzZXJ2ZXItc2lkZSByZW5kZXJpbmdcbiAgLy8gd2l0aCB0aGUgU3VwYWJhc2UgY2xpZW50LCB5b3VyIHVzZXJzIG1heSBiZSByYW5kb21seSBsb2dnZWQgb3V0LlxuICBjb25zdCB7XG4gICAgZGF0YTogeyB1c2VyIH0sXG4gIH0gPSBhd2FpdCBzdXBhYmFzZS5hdXRoLmdldFVzZXIoKVxuXG4gIC8vIElNUE9SVEFOVDogWW91ICptdXN0KiByZXR1cm4gdGhlIHN1cGFiYXNlUmVzcG9uc2Ugb2JqZWN0IGFzIGl0IGlzLlxuICAvLyBJZiB5b3UncmUgY3JlYXRpbmcgYSBuZXcgcmVzcG9uc2Ugb2JqZWN0IHdpdGggTmV4dFJlc3BvbnNlLm5leHQoKSBtYWtlIHN1cmUgdG86XG4gIC8vIDEuIFBhc3MgdGhlIHJlcXVlc3QgaW4gaXQsIGxpa2Ugc286XG4gIC8vICAgIGNvbnN0IG15TmV3UmVzcG9uc2UgPSBOZXh0UmVzcG9uc2UubmV4dCh7IHJlcXVlc3QgfSlcbiAgLy8gMi4gQ29weSBvdmVyIHRoZSBjb29raWVzLCBsaWtlIHNvOlxuICAvLyAgICBteU5ld1Jlc3BvbnNlLmNvb2tpZXMuc2V0QWxsKHN1cGFiYXNlUmVzcG9uc2UuY29va2llcy5nZXRBbGwoKSlcbiAgLy8gMy4gQ2hhbmdlIHRoZSBteU5ld1Jlc3BvbnNlIG9iamVjdCB0byBmaXQgeW91ciBuZWVkcywgYnV0IGF2b2lkIGNoYW5naW5nXG4gIC8vICAgIHRoZSBjb29raWVzIVxuICAvLyA0LiBGaW5hbGx5OlxuICAvLyAgICByZXR1cm4gbXlOZXdSZXNwb25zZVxuICAvLyBJZiB0aGlzIGlzIG5vdCBkb25lLCB5b3UgbWF5IGJlIGNhdXNpbmcgdGhlIGJyb3dzZXIgYW5kIHNlcnZlciB0byBnbyBvdXRcbiAgLy8gb2Ygc3luYyBhbmQgdGVybWluYXRlIHRoZSB1c2VyJ3Mgc2Vzc2lvbiBwcmVtYXR1cmVseSFcblxuICByZXR1cm4gc3VwYWJhc2VSZXNwb25zZVxufVxuIl0sIm5hbWVzIjpbImNyZWF0ZVNlcnZlckNsaWVudCIsIk5leHRSZXNwb25zZSIsInVwZGF0ZVNlc3Npb24iLCJyZXF1ZXN0Iiwic3VwYWJhc2VVcmwiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMIiwic3VwYWJhc2VBbm9uS2V5IiwiTkVYVF9QVUJMSUNfU1VQQUJBU0VfQU5PTl9LRVkiLCJjb25zb2xlIiwiZXJyb3IiLCJuZXh0Iiwic3VwYWJhc2VSZXNwb25zZSIsInN1cGFiYXNlIiwiY29va2llcyIsImdldEFsbCIsInNldEFsbCIsImNvb2tpZXNUb1NldCIsImZvckVhY2giLCJuYW1lIiwidmFsdWUiLCJzZXQiLCJvcHRpb25zIiwiZGF0YSIsInVzZXIiLCJhdXRoIiwiZ2V0VXNlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./lib/supabase/middleware.ts\n");

/***/ })

});